# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui/browser.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.ApplicationModal)
        MainWindow.resize(650, 599)
        MainWindow.setMinimumSize(QtCore.QSize(650, 450))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/vocebrowser.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setDocumentMode(True)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setEnabled(True)
        self.centralwidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.centralwidget.setAutoFillBackground(True)
        self.centralwidget.setObjectName("centralwidget")
        self.mainVerticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.mainVerticalLayout.setObjectName("mainVerticalLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout.setSpacing(4)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.urlbar = QtWidgets.QLineEdit(self.centralwidget)
        self.urlbar.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.urlbar.sizePolicy().hasHeightForWidth())
        self.urlbar.setSizePolicy(sizePolicy)
        self.urlbar.setMinimumSize(QtCore.QSize(50, 30))
        self.urlbar.setObjectName("urlbar")
        self.horizontalLayout.addWidget(self.urlbar)
        self.goButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.goButton.sizePolicy().hasHeightForWidth())
        self.goButton.setSizePolicy(sizePolicy)
        self.goButton.setMinimumSize(QtCore.QSize(80, 30))
        self.goButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.goButton.setIconSize(QtCore.QSize(20, 20))
        self.goButton.setAutoDefault(False)
        self.goButton.setDefault(True)
        self.goButton.setFlat(False)
        self.goButton.setObjectName("goButton")
        self.horizontalLayout.addWidget(self.goButton)
        self.verticalLayout.addLayout(self.horizontalLayout)
        spacerItem = QtWidgets.QSpacerItem(5, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.verticalLayout.addItem(spacerItem)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setElideMode(QtCore.Qt.ElideNone)
        self.tabWidget.setUsesScrollButtons(False)
        self.tabWidget.setDocumentMode(True)
        self.tabWidget.setTabsClosable(True)
        self.tabWidget.setMovable(True)
        self.tabWidget.setTabBarAutoHide(False)
        self.tabWidget.setObjectName("tabWidget")
        self.tab1 = QtWidgets.QWidget()
        self.tab1.setObjectName("tab1")
        self.tabWidget.addTab(self.tab1, "")
        self.tab2 = QtWidgets.QWidget()
        self.tab2.setObjectName("tab2")
        self.tabWidget.addTab(self.tab2, "")
        self.verticalLayout.addWidget(self.tabWidget)
        self.mainVerticalLayout.addLayout(self.verticalLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.navigationToolBar = QtWidgets.QToolBar(MainWindow)
        self.navigationToolBar.setMinimumSize(QtCore.QSize(0, 0))
        self.navigationToolBar.setMaximumSize(QtCore.QSize(16777214, 16777215))
        self.navigationToolBar.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.navigationToolBar.setContextMenuPolicy(QtCore.Qt.PreventContextMenu)
        self.navigationToolBar.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.navigationToolBar.setMovable(False)
        self.navigationToolBar.setAllowedAreas(QtCore.Qt.NoToolBarArea)
        self.navigationToolBar.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.navigationToolBar.setFloatable(False)
        self.navigationToolBar.setObjectName("navigationToolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.navigationToolBar)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 650, 22))
        self.menuBar.setObjectName("menuBar")
        self.menuFile = QtWidgets.QMenu(self.menuBar)
        self.menuFile.setObjectName("menuFile")
        self.menuSettings = QtWidgets.QMenu(self.menuBar)
        self.menuSettings.setObjectName("menuSettings")
        self.menuView = QtWidgets.QMenu(self.menuBar)
        self.menuView.setObjectName("menuView")
        self.menuHelp = QtWidgets.QMenu(self.menuBar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuCommands = QtWidgets.QMenu(self.menuBar)
        self.menuCommands.setObjectName("menuCommands")
        MainWindow.setMenuBar(self.menuBar)
        self.actionNew_Window = QtWidgets.QAction(MainWindow)
        self.actionNew_Window.setObjectName("actionNew_Window")
        self.actionBack = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/previous.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBack.setIcon(icon1)
        self.actionBack.setObjectName("actionBack")
        self.actionForward = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/next.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionForward.setIcon(icon2)
        self.actionForward.setObjectName("actionForward")
        self.actionReload = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/refresh.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionReload.setIcon(icon3)
        self.actionReload.setObjectName("actionReload")
        self.actionHome = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/flat-home.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHome.setIcon(icon4)
        self.actionHome.setObjectName("actionHome")
        self.actionNewTab = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/tab-new.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNewTab.setIcon(icon5)
        self.actionNewTab.setObjectName("actionNewTab")
        self.actionNewWindow = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/window-new.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNewWindow.setIcon(icon6)
        self.actionNewWindow.setObjectName("actionNewWindow")
        self.actionIncognito_window = QtWidgets.QAction(MainWindow)
        self.actionIncognito_window.setObjectName("actionIncognito_window")
        self.actionHistory = QtWidgets.QAction(MainWindow)
        self.actionHistory.setObjectName("actionHistory")
        self.actionDownloads = QtWidgets.QAction(MainWindow)
        self.actionDownloads.setObjectName("actionDownloads")
        self.actionBookmarks = QtWidgets.QAction(MainWindow)
        self.actionBookmarks.setObjectName("actionBookmarks")
        self.actionAboutVoce = QtWidgets.QAction(MainWindow)
        self.actionAboutVoce.setObjectName("actionAboutVoce")
        self.actionDocumentation = QtWidgets.QAction(MainWindow)
        self.actionDocumentation.setObjectName("actionDocumentation")
        self.actionAboutPlugins = QtWidgets.QAction(MainWindow)
        self.actionAboutPlugins.setObjectName("actionAboutPlugins")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.navigationToolBar.addAction(self.actionBack)
        self.navigationToolBar.addAction(self.actionForward)
        self.navigationToolBar.addAction(self.actionReload)
        self.navigationToolBar.addAction(self.actionHome)
        self.navigationToolBar.addSeparator()
        self.navigationToolBar.addAction(self.actionNewTab)
        self.navigationToolBar.addAction(self.actionNewWindow)
        self.menuFile.addAction(self.actionIncognito_window)
        self.menuFile.addAction(self.actionHistory)
        self.menuFile.addAction(self.actionDownloads)
        self.menuFile.addAction(self.actionBookmarks)
        self.menuFile.addAction(self.actionExit)
        self.menuHelp.addAction(self.actionAboutVoce)
        self.menuHelp.addAction(self.actionDocumentation)
        self.menuHelp.addAction(self.actionAboutPlugins)
        self.menuBar.addAction(self.menuFile.menuAction())
        self.menuBar.addAction(self.menuView.menuAction())
        self.menuBar.addAction(self.menuCommands.menuAction())
        self.menuBar.addAction(self.menuSettings.menuAction())
        self.menuBar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Voce Browser"))
        MainWindow.setToolTip(_translate("MainWindow", "Voce Browser"))
        MainWindow.setStatusTip(_translate("MainWindow", "Voce Browser"))
        self.urlbar.setPlaceholderText(_translate("MainWindow", "http://"))
        self.goButton.setText(_translate("MainWindow", "Go"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab1), _translate("MainWindow", "Tab 1"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab2), _translate("MainWindow", "Tab 2"))
        self.navigationToolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.menuFile.setTitle(_translate("MainWindow", "Browser"))
        self.menuSettings.setTitle(_translate("MainWindow", "Settings"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuCommands.setTitle(_translate("MainWindow", "Commands"))
        self.actionNew_Window.setText(_translate("MainWindow", "New Window"))
        self.actionBack.setText(_translate("MainWindow", "Back"))
        self.actionForward.setText(_translate("MainWindow", "Forward"))
        self.actionReload.setText(_translate("MainWindow", "Reload"))
        self.actionHome.setText(_translate("MainWindow", "Home"))
        self.actionNewTab.setText(_translate("MainWindow", "New tab"))
        self.actionNewTab.setShortcut(_translate("MainWindow", "Ctrl+T"))
        self.actionNewWindow.setText(_translate("MainWindow", "New window"))
        self.actionIncognito_window.setText(_translate("MainWindow", "Incognito Mode"))
        self.actionHistory.setText(_translate("MainWindow", "History"))
        self.actionDownloads.setText(_translate("MainWindow", "Downloads"))
        self.actionBookmarks.setText(_translate("MainWindow", "Bookmarks"))
        self.actionAboutVoce.setText(_translate("MainWindow", "About Voce"))
        self.actionDocumentation.setText(_translate("MainWindow", "Documentation"))
        self.actionAboutPlugins.setText(_translate("MainWindow", "About Plugins"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
import resource_rc
